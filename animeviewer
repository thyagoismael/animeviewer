#!/bin/sh
#
# Autor: Thyago Ismael
#
# Animeviewer - utilitário para o site animesonline.vip


#####################################################################
#####################################################################
## Arquivos de configuração. Altere se necessário
#
# Diretório base dos arquivos
DIR_CONFIG="$HOME/.config/animeviewer"
# Diretório dos downloads
DIR_DOWNLOADS="$DIR_CONFIG/downloads"
# Arquivo de todos os links salvos
ARQ_LINKS="$DIR_CONFIG/links"
# Player de vídeo
PLAYER='mpv --really-quiet'

#####################################################################
#####################################################################
#####################################################################
#####################################################################

menuInicial()
{
    OPCOES="Lista
Favoritos
Downloads
Atualizar
Sair"

    echo oi
    echo "$OPCOES" | dmenu -i
}

criarArquivos()
{
    # Cria a pasta caso não exista
    test -d "$DIR_CONFIG" || mkdir -p "$DIR_CONFIG"

    # Cria a pasta de downloads
    test -d "$DIR_DOWNLOADS" || mkdir -p "$DIR_DOWNLOADS"

    # Cria o arquivo de links
    test -f "$ARQ_LINKS" || touch "$ARQ_LINKS"
}

# Remove a sintaxe do html deixando apenas a url e o nome
removerHTML()
{
    echo "$1" | sed 's/^.*href="// ; s/" [^"]*"/\t/ ; s/".*// ; s/ /_/g ; s/_Online//' | tr '\t' ' '
}

# Preenche o arquivo ARQ_LINKS
getLinks()
{
    MAIOR_PAGINA=189 # número de páginas do site (em 17-09-2019 haviam 189)
    TEMP=$(mktemp)

    # Faz uma string com todos os links seguindo o formato definido no site
    LINKS="https://animesonline.vip/animes/"
    for pagina in $(seq 2 $MAIOR_PAGINA)
    do
        LINKS="$LINKS https://animesonline.vip/animes/page/$pagina/"
    done

    # Baixa todos nomes e os links de uma só vez para uma arquivo temporário
    removerHTML "$(curl -s $LINKS | grep '^<a itemp')" >> $TEMP

    # Substitui o arquivo de links anterior pelo arquivo temporário ordenado e remove-o
    sort -u $TEMP > $ARQ_LINKS
    rm $TEMP
    
    # Acabou
    echo -e "\n$(wc -l $ARQ_LINKS | cut -d' ' -f1) animes salvos"
}

# Retorna a url da página do anime
selecionarAnime()
{
    dmenu -i -l 10 -p 'Escolha o título: ' < $ARQ_LINKS | awk '{print $1}' 
}

# Retorna a url do episódio
selecionarEpisodio()
{
    # $1 é o link do anime
    test -z "$1" && exit 1 # caso não seja informado o nome

    removerHTML "$(curl -s $1 | grep '^<a href=".*Epis')" | # deixa apenas o link e o nome, nessa ordem
    dmenu -i -l 10 -p 'Escolha o episódio: ' | awk '{print $1}' # deixa apenas o link
}

#####################################################################
#####################################################################
#####################################################################
#####################################################################

cat << ACABOUCOMANDOS
# Verifica se os arquivos e pastas necessárias existem
# Se não existirem, os cria
criarArquivos

# Avisa se o arquivo de links estiver vazio
test -z "$(cat $ARQ_LINKS)" && echo 'Aviso: Arquivo de links vazio. Favor, atualizar.'

# Menu inicial
ESCOLHA=$(echo 'Reproduzir\nBaixar\nAtualizar' | dmenu -i -p 'Animeviewer')

# Opção escolhida
case $ESCOLHA in
    Reproduzir)
        selecionarEpisodio $(selecionarAnime) | xargs -rI{} $PLAYER {}
        ;;
    Baixar)
        URL_ANIME="$(selecionarAnime)"
        DIR_ANIME="$(echo \"$URL_ANIME\" | cut -d'/' -f4)" # usa a ultima parte da url como nome da pasta

        # cria a pasta deste anime específico se não existir
        test -d "$DIR_DOWNLOADS/$DIR_ANIME" || mkdir -p "$DIR_DOWNLOADS/$DIR_ANIME" 

        URL_EPISODIO="$(selecionarEpisodio "$URL_ANIME")"
        NOME_EPISODIO=$(echo $URL_EPISODIO | cut -d'/' -f 5) # ultima parte do url como nome do arquivo

        test -z "$URL_EPISODIO" && exit 1 # url não informado termina a execução
        youtube-dl "$URL_EPISODIO" --exec "mv {} \"$DIR_DOWNLOADS/$DIR_ANIME/$NOME_EPISODIO\""
        notify-send "Download terminado" "$NOME_EPISODIO está disponível." # manda notifição quando termina de baixar
        ;;
    Atualizar)
        notify-send "Animeviewer atualizado" "$(getLinks)" # atualiza e manda notifição
        ;;
    *)
        exit 1
        ;;
esac)
ACABOUCOMANDOS

echo ola
while true
do
    mostrarMenu
done
